<?xml version="1.0" encoding="UTF-8"?>

<project name="cpms-common" default="build" basedir=".">

    <property file="./build.properties"/>
    <property name="buildno" value="cpms-${env.BUILD_NUMBER}"/>

    <!-- Fileset for all files -->
    <fileset dir="." id="allfiles">
        <include name="**"/>
        <exclude name="**.git**"/>
        <exclude name="build/**"/>
    </fileset>

    <target name="build" depends="prepare,composer,lint,phpmd,phpcs,phpcpd,phpunit,pdepend"/>

    <target name="clean" description="Cleanup build artifacts">
        <echo message="Base directory - ${basedir}"/>
        <echo message="Cleaning up build"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs/html"/>

    </target>


    <target name="prepare" depends="clean" description="Prepare for build project">
        <echo message="${basedir}"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs/html"/>
        <mkdir dir="${basedir}/data/DoctrineORMModule/Proxy"/>
        <chmod type="dir" file="${basedir}/data/**" perm="777"/>
    </target>

    <target name="composer" description="Update dependency with composer">
        <exec executable="php" failonerror="true">
            <arg line="composer.phar update --no-interaction -v --profile"/>
        </exec>
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit">
        <echo message="phpunit test start"/>

        <exec dir="test" executable="phpunit" failonerror="true">
            <arg line=" --configuration=${basedir}/test/phpunit.xml
             --log-junit=${basedir}/build/logs/junit.xml
             --coverage-clover=${basedir}/build/logs/clover.xml
             --coverage-html=${basedir}/build/coverage"/>
        </exec>

    </target>

    <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer">
        <echo message="Running code sniffer .."/>
        <exec executable="phpcs">
            <arg line=" --report=checkstyle
            --report-file=${basedir}/build/logs/checkstyle.xml
            --standard=${basedir}/build/sonar/Profiles/DVSA/CS/ruleset.xml
            --extensions=php
            ${basedir}/src"/>
        </exec>

    </target>


    <target name="phpmd" description="Perform project mess detection using PHPMD">
        <echo message="Running mess detector .."/>
        <exec executable="phpmd">
            <arg path="${basedir}/src"/>
            <arg value="xml"/>
            <arg value="${basedir}/build/sonar/Profiles/DVSA/PMD/ruleset.xml"/>
            <arg value="--exclude"/>
            <arg value="vendor,public,tests,data,config"/>
            <arg value="--suffixes=php"/>
            <arg value="--reportfile"/>
            <arg value="${basedir}/build/logs/messdetector.xml"/>
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <echo message="Running duplicate code checker .."/>
        <exec executable="phpcpd">
            <arg line=" --exclude=vendors,public,tests --log-pmd ${basedir}/build/logs/phpcpd.xml ${basedir}/src"/>
        </exec>
    </target>


    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <echo message="Running pdepend .."/>
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml"/>
            <arg value="--jdepend-chart=${basedir}/build/logs/dependencies.svg"/>
            <arg value="--overview-pyramid=${basedir}/build/logs/overview-pyramid.svg"/>
            <arg value="--coverage-report=${basedir}/build/logs/clover.xml"/>
            <arg value="--without-annotations"/>
            <arg value="--ignore=vendor,public,tests"/>
            <arg path="${basedir}/src"/>
        </exec>
    </target>

    <target name="lint" description="Perform syntax check of sourcecode files">
        <apply executable="php" failonerror="true">
            <arg value="-l"/>
            <fileset dir="${basedir}/src" includes="**/*.php"/>
            <fileset dir="${basedir}/config" includes="**/*.php"/>
        </apply>
    </target>

</project>